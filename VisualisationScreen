import android.content.Context;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Color;
import android.graphics.drawable.ColorDrawable;
import android.support.v4.content.ContextCompat;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.TextView;

import com.anychart.chart.common.dataentry.DataEntry;
import com.anychart.chart.common.dataentry.ValueDataEntry;
import com.github.mikephil.charting.animation.Easing;
import com.github.mikephil.charting.charts.PieChart;
import com.github.mikephil.charting.components.Legend;
import com.github.mikephil.charting.data.BarEntry;
import com.github.mikephil.charting.data.Entry;
import com.github.mikephil.charting.data.PieData;
import com.github.mikephil.charting.data.PieDataSet;
import com.github.mikephil.charting.data.PieEntry;
import com.github.mikephil.charting.formatter.IValueFormatter;
import com.github.mikephil.charting.formatter.PercentFormatter;
import com.github.mikephil.charting.highlight.Highlight;
import com.github.mikephil.charting.interfaces.datasets.IDataSet;
import com.github.mikephil.charting.listener.OnChartValueSelectedListener;
import com.github.mikephil.charting.utils.ColorTemplate;
import com.github.mikephil.charting.utils.MPPointF;

import java.util.ArrayList;

public class MainActivity extends AppCompatActivity
{
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        this.setupChart(1800, 2000);
        this.drawTheTing(1200, 2333, 394);



        this.setupChart(1800, 2000);
    }

    protected void drawTheTing(int Carbs, int prot, int fib)    //..................................Draws the pie chart displaying macros.
    {
//        Pie CalorieCounter = AnyChart.pie();   //...................................................Create a new pie object from the AnyChart library.
//        List<DataEntry> Calories = new ArrayList<>();   //..........................................Create a new list for data entry.
//        Calories.add(new ValueDataEntry("Carbohydrates", Carbs));    //..........................Add new entry to the array list "calories".
//        Calories.add(new ValueDataEntry("Protein", prot));  //...................................Add new entry to the array list "calories".
//        Calories.add(new ValueDataEntry("Fibres", fib));    //...................................Add new entry to the array list "calories".
//        CalorieCounter.data(Calories);  //..........................................................Pass the data in the array list to the pie chart.
//        AnyChartView anyChartView = (AnyChartView) findViewById(R.id.any_chart_view); //............Set the view to any_chart_view.
//        anyChartView.setChart(CalorieCounter);  //..................................................Set the chart in the view so it can appear.

        PieChart CalorieCounter;
        CalorieCounter = findViewById(R.id.CalorieCount);
        CalorieCounter.setUsePercentValues(true);
        CalorieCounter.getDescription().setEnabled(false);
        CalorieCounter.setExtraOffsets(5, 10, 5, 5);
        CalorieCounter.setDragDecelerationFrictionCoef(0.95f);
        CalorieCounter.setDrawHoleEnabled(false);

        Bitmap b1 =BitmapFactory.decodeResource(getResources(), R.drawable.mymeat);
        Bitmap b2 =BitmapFactory.decodeResource(getResources(), R.drawable.vegetables);
        Bitmap b3 =BitmapFactory.decodeResource(getResources(), R.drawable.wheatfield);
        Bitmap[] Pictures = {b1,b2,b3};

        ArrayList<PieEntry> food = new ArrayList<>();
        food.add(new PieEntry(Carbs, "Grains", Pictures[1]));
        food.add(new PieEntry(prot, "Vegetables",Pictures[2]));
        food.add(new PieEntry(fib, "Fruits", Pictures[3]));


        PieDataSet dataSet = new PieDataSet(food, "Macros");
        dataSet.setSliceSpace(3f);
        dataSet.setSelectionShift(5f);
        dataSet.setColors(ColorTemplate.JOYFUL_COLORS);

        PieData data = new PieData(dataSet);
        data.setValueTextSize(10f);
        data.setValueTextColor(Color.YELLOW);

        CalorieCounter.setData(data);
        CalorieCounter.setDrawEntryLabels(true);
    }

    protected void updateChart(int totalcal, int min, int max)  //..................................Updates the donut chart calorie counter.
    {
        TextView numberOfCals = findViewById(R.id.number_of_calories);
        numberOfCals.setText(String.valueOf(totalcal) + " / " + min);   //..........................Updates text under the calorie counter
            //......................................................................................Calculates the size of the slice
        ProgressBar pieChart = findViewById(R.id.stats_progressbar);    //..........................Assigns the attributes of the chart to pieChart
        double d = (double) totalcal / max;
        int progress = (int) (d * 100);
        pieChart.setProgress(progress); //..........................................................Draws the new slice.
    }

    protected void setupChart(int min, int max)
    {
        TextView Initial = findViewById(R.id.number_of_calories);
        Initial.setText("0" + " / " + min);

        ProgressBar PieChart = findViewById(R.id.background_progressbar);
        int progress = (max/min) * 10;
        PieChart.setProgress(progress);
    }

//    public void onClick(View view)
//    {
//        Intent intent = new Intent(this, IntroScreen.class);
//        startActivity(intent);
//    }
}

